version: '3.8'

services:
  scanner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aws-security-scanner
    volumes:
      - ./config:/app/config
      - ./reports:/app/reports
      - ./logs:/app/logs
      - ~/.aws:/home/scanner/.aws:ro  # Mount AWS credentials
    environment:
      - AWS_PROFILE=${AWS_PROFILE:-default}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SCANNER_CONFIG=/app/config/config.yaml
    ports:
      - "8080:8080"  # API port
    healthcheck:
      test: ["CMD", "python", "-m", "aws_security_scanner.cli", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - scanner-net

  redis:
    image: redis:6-alpine
    container_name: aws-security-scanner-redis
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scanner-net

  postgres:
    image: postgres:13-alpine
    container_name: aws-security-scanner-db
    environment:
      - POSTGRES_DB=scannerdb
      - POSTGRES_USER=scanner
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scanner -d scannerdb"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - scanner-net

volumes:
  redis-data:
  postgres-data:

networks:
  scanner-net:
    driver: bridge
